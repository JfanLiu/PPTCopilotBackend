; gpt_api_url = `https://api.openai.com/v1/chat/completions`
gpt_api_url = `https://openkey.cloud/v1/chat/completions`
; gpt_model = `gpt-3.5-turbo`
gpt_model = `gpt-4`
gpt_proxy = `http://localhost:10809`
gpt_api_key = `sk-PcTm4AhjxKAVrzXs5f4689A5Ea7b418bB1994d2dB1Bf2aDb`

gpt_api_keys = `sk-PcTm4AhjxKAVrzXs5f4689A5Ea7b418bB1994d2dB1Bf2aDb,sk-PcTm4AhjxKAVrzXs5f4689A5Ea7b418bB1994d2dB1Bf2aDb,sk-PcTm4AhjxKAVrzXs5f4689A5Ea7b418bB1994d2dB1Bf2aDb`

outline_prompt_template = `大纲主题: {{topic}}
                           汇报人: {{sponsor}},
                           仿照以下格式,生成PPT大纲,不要带上任何注释性⽂字,不用多余的空格,换行,不允许带上<!--第一张幻灯片-->这样的注释项,只给出代码就行
                           <slides>
                           <section class='cover'>
                               <!--第一张幻灯片-->
                               <p>标题</p>
                               <p>汇报人</p>
                           </section>
                           <section class='catalog'>
                               <!--只用给出目录项,注意目录项必须在3-5点内-->
                               <p> 目录 </p>
                               <p> 目录项1 </p>
                               <p> 目录项2 </p>
                               <p> 目录项3 </p>
                           </section>
                           <section class='content'>
                               <!--有且只能有一个标题和一个内容概要-->
                               <p> 标题 </p>
                               <p>内容概要</p>
                           </section>
                           <!--更多的幻灯片・・・-->
                           </slides>`

guide_single_prompt_template = `
                            当前页大纲:{{outline}}.
                            仿照以下格式,生成PPT具体内容(xml表示),不要带上任何注释性⽂字,不允许带上<!--第一张幻灯片-->这样的注释项,只给出代码就行
                            格式:
                            <section class='content'>
                            <p>标题(必须)</p>
                            <p>第一点...(必须)</p>
                            <p>第二点...(必须)</p>
                            <!--必须具有两点,接下来的点任你发挥-->
                            <p>第三点...</p>
                            </section>
                            `

single_page_prompt_template = `用户指令:{{prompt}}.
                               按照用户指令,处理PPT,不允许带上<!--第一张幻灯片-->这样的注释项,只给出代码就行
                               返回:返回的处理结果仍然应该是xml格式文本，仅允许修改现有的p标签中的内容，务必保证标签及标签的id不变，(这很重要!)
                               要处理的PPT内容如下:
                               {{slide}}`

tasks_generate_prompt_template = `
                                例子:
                                用户指令:美化这页ppt
                                ppt内容:<section class='content'><p>大海啊你全是水</p></section>
                                [
                                   {
                                       "task_name": "文本样式修改",
                                       "prompt": "美化文本样式"
                                   },
                                   {
                                       "task_name": "图片插入",
                                       "prompt": "大海的图片"
                                   },
                               ]

                                用户指令:{{prompt}}.
                                ppt内容:{{slide}}.
                                请按照用户指令和ppt内容，选择相应任务完成用户指令，生成json格式的任务列表，task为任务名，prompt为完成任务所需要的提示词，prompt需要根据用户指令得出，不要带上任何注释性⽂字，任务数为1到5个，每个任务可使用多次，格式与例子一致。
                                可选的任务与其描述：
                                文本修改：修改现有文本的内容、
                                样式修改：修改现有文本的样式，包括字体颜色，大小、
                                添加文本框：添加一个新的文本框，有初始内容、
                                图片插入：插入一张图片`

change_style_prompt_template = `
                                用户指令:{{prompt}}.
                                按照用户指令，通过修改xml标签来更改文本的样式，注意不要改变原来的xml格式，不要带上任何注释性⽂字：
                                {{slide}}`

add_text_prompt_template = `
                            用户指令:{{prompt}}.
                            按照用户指令并根据现有文本框，生成一个新的文本框，格式与现有文本框保持一致，不要带上任何注释性⽂字。
。                           重要：只返回新增的文本框，不要返回现有文本框！！！！！
                            现有文本框内容如下：
                            {{slide}}`